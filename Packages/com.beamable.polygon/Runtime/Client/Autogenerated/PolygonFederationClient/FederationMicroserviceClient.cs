//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.FederationMicroservice.FederationMicroservice"/> </summary
    public sealed class FederationMicroserviceClient : MicroserviceClient, Beamable.Common.IHaveServiceName, Beamable.Common.ISupportsFederatedLogin<Beamable.Polygon.Common.PolygonCloudIdentity>, Beamable.Common.ISupportsFederatedInventory<Beamable.Polygon.Common.PolygonCloudIdentity>
    {
        
        public FederationMicroserviceClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "FederationMicroservice";
            }
        }
        
        /// <summary>
        /// Call the Test method on the FederationMicroservice microservice
        /// <see cref="Beamable.Microservices.FederationMicroservice.FederationMicroservice.Test"/>
        /// </summary>
        public Beamable.Common.Promise<System.Collections.Generic.IList<string>> Test(string path)
        {
            string serialized_path = this.SerializeArgument<string>(path);
            string[] serializedFields = new string[] {
                    serialized_path};
            return this.Request<System.Collections.Generic.IList<string>>("FederationMicroservice", "Test", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersFederationMicroserviceClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForFederationMicroserviceClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<FederationMicroserviceClient>();
        }
        
        public static FederationMicroserviceClient FederationMicroservice(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<FederationMicroserviceClient>();
        }
    }
}
